var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _PostListItem = require("./PostListItem");
  var _PostListItemDefault = _parcelHelpers.interopDefault(_PostListItem);
  var _Post = require("./Post");
  var _PostDefault = _parcelHelpers.interopDefault(_Post);
  var _jsxFileName = "D:\\SLIIT\\3rd year\\1st semester\\Application Framework\\lab\\lab7react\\components\\PostFunctional.jsx", _s = $RefreshSig$();
  function PostFunctional(props) {
    _s();
    const [post, setPost] = useState(null);
    _react.useEffect(() => {
      console.log('Mount and update from the effect hook');
      return () => console.log("Unmount from the effect hook");
    });
    const {posts} = props;
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 13,
          columnNumber: 12
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("table", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 14,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("thead", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 15,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("tr", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 16,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("th", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 17,
          columnNumber: 17
        }
      }, "ID"), /*#__PURE__*/_reactDefault.default.createElement("th", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 18,
          columnNumber: 17
        }
      }, "name"), /*#__PURE__*/_reactDefault.default.createElement("th", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 19,
          columnNumber: 17
        }
      }, "description"), /*#__PURE__*/_reactDefault.default.createElement("th", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 20,
          columnNumber: 17
        }
      }))), /*#__PURE__*/_reactDefault.default.createElement("tbody", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 23,
          columnNumber: 13
        }
      }, posts.map(post => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement(_PostListItemDefault.default, {
            key: post.id.toString(),
            post: post,
            selectPost: post => setPost(post),
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 25,
              columnNumber: 24
            }
          })
        );
      }))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30,
          columnNumber: 9
        }
      }, post ? /*#__PURE__*/_reactDefault.default.createElement(_PostDefault.default, {
        post: post,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 31,
          columnNumber: 21
        }
      }) : ''))
    );
  }
  exports.default = PostFunctional;
  _s(PostFunctional, "VAK5tdJEk0cqnRsmbvM4YDyoQLs=");
  _c = PostFunctional;
  var _c;
  $RefreshReg$(_c, "PostFunctional");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
